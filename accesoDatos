using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Data.SqlClient;
using System.Data;

namespace TUP_PI_Recuperatorio_1W4A.Datos
{
    internal class AccesoDatos
    {
        SqlConnection conexion;
        SqlCommand comando;
        
        string cadenaConexion;
        public AccesoDatos()
        {
            cadenaConexion = @"Data Source=localhost;Initial Catalog=Consultorio;Integrated Security=True";
            conexion = new SqlConnection(cadenaConexion);
            comando = new SqlCommand();
        }
        private void conectar()
        {
            conexion.Open();
            comando.Connection = conexion;
            comando.CommandType = CommandType.Text;
        }
        public void desconectar()
        {
            conexion.Close();
        }

        public DataTable consultarBD(string consultaSQL)
        {
            DataTable tabla = new DataTable();
            conectar();
            comando.CommandText = consultaSQL;
            tabla.Load(comando.ExecuteReader());
            desconectar();
            return tabla;
        }

        //public int actualizarBD(string consultaSQl)
        //{
        //    int filasAfectadas;
        //    conectar();
        //    comando.CommandText = consultaSQl;
        //    filasAfectadas = comando.ExecuteNonQuery();
        //    desconectar();
        //    return filasAfectadas;
        //}
        

        public int actualizarBD(string consultasSQL, List<Parametro> lParametros)
        {
            int filasAfectadas;
            conectar();
            comando.CommandText = consultasSQL;

            comando.Parameters.Clear();
            foreach (Parametro p in lParametros)

            {
                comando.Parameters.AddWithValue(p.Nombre, p.Valor);
            }
            filasAfectadas = comando.ExecuteNonQuery();
            desconectar();
            return filasAfectadas;
        }


    }
}
